{{!< default}}
{{!-- 
/**
 * Uncertainty Project
 * Developed by Engagement Lab, 2016
 * ==============
 * 
 * Script include for global logic
 * ==========
 */
--}}

<script type="text/javascript">

	var socket,
	socketEvents;

	eventIds = [
		'connect',
		'disconnect'
	];

	var registerEvents = function() {

    {{#ifnoteq environment "production"}}
        
        socket.on('connect_timeout', function() {
           console.warn('Client timed out when connecting.');
           {{!-- debugger; --}}
        });
        socket.on('disconnect', function() {
           console.warn('Client was disconnected!');
           {{!-- debugger; --}}
        });
        socket.on('reconnecting', function() {
           console.log('Reconnecting.');
           {{!-- debugger; --}}
        });
        socket.on('reconnect_attempt', function() {
           console.log('Trying to reconnect!');
           {{!-- debugger; --}}
        });
        socket.on('reconnect_error', function(err) {
           console.error('Reconnect error: %s', err);
           {{!-- debugger; --}}
        });

        console.log('Connecting to game "' + gameCode + '".');

    {{/ifnoteq}}

    $.each(eventIds, function(index, id) {
      
      socket.on(id, function(eventData) {

            {{#ifnoteq environment "production"}}

                $('#last-event').text('last event: ' + id);

                console.log("EVENT ID: ", id);

            {{/ifnoteq}}
            
            socketEvents(id, eventData);

            if(typeof(gameEvents) == "function")
                gameEvents(id, eventData);

        });

    });

	}

	$(document).ready(function() {

	   socket = io('//{{host}}', {path: '/module', 'reconnection': true,'reconnectionDelay': 500,'maxReconnectionAttempts':Infinity});
	   registerEvents();


			socketEvents = function(eventId, eventData) {

			    switch (eventId) {

			        case 'connect':

			            console.log('connected');

				        break;

				      case 'disconnect':

			            console.log('disconnected');

				        break;
			    }
			}

	});
	
</script>